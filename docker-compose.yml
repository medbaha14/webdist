version: '3.8'

networks:
  mynetwork:
    driver: bridge

volumes:
  zookeeper-data:
  kafka-data:

services:

  mongoDB:
    image: mongo
    container_name: mongoDB
    ports:
      - '27018:27017'
    networks:
      - mynetwork

  mysql:
    image: mysql:latest
    container_name: mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: product
      MYSQL_USER: admin
      MYSQL_PASSWORD: root
    ports:
      - "3306:3306"
    networks:
      - mynetwork

  config-server:
    build:
      context: ./config
      dockerfile: Dockerfile
    ports:
      - "7077:7077"
    expose:
      - '7077'
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:7077/actuator/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
    environment:
      - DISCOVERY_SERVICE_URL=http://ms-eureka-server-1:8761/eureka
    networks:
      - mynetwork

  eureka-server:
    build:
      context: ./eruka
      dockerfile: Dockerfile
    ports:
      - "8761:8761"
    expose:
      - '8761'
    networks:
      - mynetwork

  gateway-server:
    build:
      context: ./gateway
      dockerfile: Dockerfile
    ports:
      - "8090:8091"
    environment:
      - DISCOVERY_SERVICE_URL=http://ms-eureka-server-1:8761/eureka
    depends_on:
      - eureka-server
      - config-server
    networks:
      - mynetwork

  stock:
    build:
      context: ./Stok
      dockerfile: Dockerfile
    ports:
      - "9999:9099"
    expose:
      - '9099'
    depends_on:
      - config-server
    environment:
      - CONFIG_SERVICE_URL=http://config-server:7077
      - DISCOVERY_SERVICE_URL=http://ms-eureka-server-1:8761/eureka
      - mongoDB
      - broker
    links:
      - mongoDB
    restart: on-failure
    networks:
      - mynetwork

  product:
    build:
      context: ./product
      dockerfile: Dockerfile
    ports:
      - "8088:8088"
    expose:
      - '8088'
    environment:
      - DISCOVERY_SERVICE_URL=http://ms-eureka-server-1:8761/eureka
      - CONFIG_SERVICE_URL=http://config-server:7077
      - spring.datasource.url=jdbc:mysql://mysql:3306/MSproductDB?createDatabaseIfNotExist=true&useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC
      - spring.datasource.username=root
    depends_on:
      - broker
      - mysql
      - config-server
    networks:
      - mynetwork

  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    volumes:
      - zookeeper-data:/var/lib/zookeeper
    networks:
      - mynetwork

  broker:
    image: confluentinc/cp-kafka:7.3.0
    container_name: broker
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://broker:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    volumes:
      - kafka-data:/var/lib/kafka
    networks:
      - mynetwork
